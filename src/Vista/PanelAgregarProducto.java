
package Vista;

import Modelo.Producto;
import javax.swing.*;
import java.awt.*;
import modelo.*;
public class PanelAgregarProducto extends JDialog {

    public PanelAgregarProducto(JFrame parent, AVLTree arbolInventario) {
        super(parent, "Agregar Producto", true);
        setSize(400, 300);
        setLocationRelativeTo(parent);
        setLayout(new BorderLayout());

  
        JPanel panelCampos = new JPanel(new GridLayout(4, 2, 10, 10));
        JLabel lblId = new JLabel("ID:");
        JTextField txtId = new JTextField();
        JLabel lblNombre = new JLabel("Nombre:");
        JTextField txtNombre = new JTextField();
        JLabel lblCantidad = new JLabel("Cantidad:");
        JTextField txtCantidad = new JTextField();
        JLabel lblPrecio = new JLabel("Precio:");
        JTextField txtPrecio = new JTextField();

        panelCampos.add(lblId);
        panelCampos.add(txtId);
        panelCampos.add(lblNombre);
        panelCampos.add(txtNombre);
        panelCampos.add(lblCantidad);
        panelCampos.add(txtCantidad);
        panelCampos.add(lblPrecio);
        panelCampos.add(txtPrecio);


        JButton btnGuardar = new JButton("Guardar");
        JPanel panelBoton = new JPanel();
        panelBoton.add(btnGuardar);

        add(panelCampos, BorderLayout.CENTER);
        add(panelBoton, BorderLayout.SOUTH);

   
        btnGuardar.addActionListener(e -> {
            try {
                int id = Integer.parseInt(txtId.getText().trim());
                String nombre = txtNombre.getText().trim();
                int cantidad = Integer.parseInt(txtCantidad.getText().trim());
                double precio = Double.parseDouble(txtPrecio.getText().trim());

                if (nombre.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "El nombre no puede estar vacío.");
                    return;
                }

                Producto existente = arbolInventario.buscar(id);
                if (existente != null) {
                    JOptionPane.showMessageDialog(this, "Ya existe un producto con ese ID.");
                    return;
                }

                Producto nuevo = new Producto(id, nombre, cantidad, precio);
                arbolInventario.insertar(nuevo);
                JOptionPane.showMessageDialog(this, "Producto agregado con éxito.");
                dispose();
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Verifica los campos numéricos (ID, cantidad, precio).", "Error", JOptionPane.ERROR_MESSAGE);
            }
        });

        setVisible(true);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
